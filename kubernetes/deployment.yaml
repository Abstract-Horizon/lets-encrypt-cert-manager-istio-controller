apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: istio-system
  name: lets-encrypt-cert-manager-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lets-encrypt-cert-manager-controller
  namespace: istio-system
  labels:
    app: lets-encrypt-cert-manager-controller
spec:
  replicas: 1 # make sure to not have more than one replicas
  strategy:
    type: Recreate # make sure the old pod is being killed before the new pod is being created
  selector:
    matchLabels:
      app: lets-encrypt-cert-manager-controller
  template:
    metadata:
      labels:
        app: lets-encrypt-cert-manager-controller
    spec:
      serviceAccountName: lets-encrypt-cert-manager-controller
      containers:
      - name: lets-encrypt-cert-manager-controller
        image: $DOCKER_REGISTRY/ah/lets-encrypt-cert-manager-controller
        env:
        - name: PORT
          value: "8080"
        - name: DOCKER_REGISTRY
          value: "$DOCKER_REGISTRY"
        ports:
        - containerPort: 8080
          name: registry
          protocol: TCP
      tolerations:
        - key: "controlplane"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-kind"
                operator: "In"
                values:
                - "controlplane"
---
apiVersion: v1
kind: Service
metadata:
  name: lets-encrypt-cert-manager-controller
spec:
  ports:
  - port: 80
    name: http-lets-encrypt-cert-manager-controller
    targetPort: 8080
  selector:
    app: lets-encrypt-cert-manager-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lets-encrypt-cert-manager-controller
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "list", "watch"]

- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io/v1", "admissionregistration.k8s.io/v1beta1"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["create", "patch"]

- apiGroups: ["networking.istio.io"]
  resources: ["virtualservices", "gateways"]
  verbs: ["create", "patch"]

- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "patch"]

- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses/status"]
  verbs: ["update", "patch"]

- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["*"]

- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lets-encrypt-cert-manager-controller
subjects:
- kind: ServiceAccount
  name: lets-encrypt-cert-manager-controller
  namespace: istio-system
roleRef:
  kind: ClusterRole
  name: lets-encrypt-cert-manager-controller
  apiGroup: rbac.authorization.k8s.io
